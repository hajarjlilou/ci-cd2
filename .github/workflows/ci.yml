name: Node.js CI

on:
  push:
    branches: ['feature/ma-nouvelle-fonctionnalite']
  pull_request:
    branches: ['feature/ma-nouvelle-fonctionnalite']
  
jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # Configurer Node.js
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' 
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Validate code
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Build for production
        run: npm run build

      # Télécharger l'artefact (dist)
      - uses: actions/upload-artifact@v3
        with:
          name: web
          path: ./dist
       
      - name: Set up Git user
        run: |
          git config user.email "${{ secrets.GIT_EMAIL }}"
          git config user.name "${{ secrets.GIT_USERNAME }}"
          git remote set-url origin "https://github.com/${{ github.repository }}.git"
        

  unit-test:
    runs-on: ubuntu-latest
    needs: build 
    steps:
      - uses: actions/checkout@v3

      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Tests
        run: npm test
  release:
    runs-on: ubuntu-latest
    needs: build 
    if: github.event_name == 'workflow_dispatch'
    env:
      GITHUB_TOKEN: ${{ secrets.HUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci
      - name: Create Git tag
        run: |
          TAG_NAME="v${{ github.run_number }}"
          git tag $TAG_NAME
          git push origin $TAG_NAME

    
      - name: Create GitHub release
        run: |
          TAG_NAME="v${{ github.run_number }}"
          curl -X POST -H "Authorization: token ${{ secrets.HUB_TOKEN }}" \
          -d '{"tag_name": "'"$TAG_NAME"'", "target_commitish": "main", "name": "Release '"$TAG_NAME"'", "body": "Release description", "draft": false, "prerelease": false}' \
          "https://api.github.com/repos/${{ github.repository }}/releases"
  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Run Integration Test
        run: echo "Hello Integration !"
  e2e-test:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - name: Run E2E Tests
        run: echo "Hello E2E!"
  only-canary:
    runs-on: ubuntu-latest 
    if: ${{ github.event.inputs.environment == 'canary' }}
    steps:
      - name: Run Only Canary Command
        run: echo "Hello Only Canary!"