variables:
  ENV_TARGET: "canary"
image: node:latest
cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
    - .npm/

stages:
  - validate
  - test
  - integration
  - post-test
  - build
  - release
  - deploy

install:
  stage: .pre
  script:
    # define cache dir & use it npm!
    - npm ci --cache .npm --prefer-offline

lint:
  stage: validate
  rules:
    - if: '$CI_COMMIT_TAG == null 
        && $CI_COMMIT_TITLE !~ /^chore: release/'
  script:
    - npm run lint

only-canary:
  stage: validate
  rules:
    - if: '$ENV_TARGET == "canary"'
      when: always
  script:
    - echo "Hello Only Canary !"

unit-test:
  stage: test
  rules:
    - if: '$CI_COMMIT_TAG != null'
      when: never
    - if: '$CI_COMMIT_TITLE =~ /^chore: release/'
      when: never
    - when: on_success
  script:
    - npm test

integration-test:
  stage: integration
  needs:
    - job: unit-test  # DÃ©pend de unit-test
  script:
    - echo "Hello Integration !"

e2e-test:
  stage: post-test
  needs:
    - job: integration-test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - echo "Hello E2E !"

release:
  stage: release
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"
        && $CI_COMMIT_TAG == null 
        && $CI_COMMIT_TITLE !~ /^chore: release/'
  before_script:
    - git config user.email $GITLAB_USER_EMAIL
    - git config user.name $GITLAB_USER_NAME
    - git remote set-url origin
      "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    - git checkout $CI_COMMIT_BRANCH
    - git pull origin $CI_COMMIT_BRANCH --rebase
  script:
    - npx --yes release-it --ci